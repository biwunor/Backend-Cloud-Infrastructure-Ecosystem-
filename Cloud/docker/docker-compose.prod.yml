version: '3.8'

services:
  # Frontend and API service
  app:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile
      target: production
    container_name: uw-waste-management-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # AWS credentials should be provided via environment or role
      # - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      # - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      # - AWS_REGION=${AWS_REGION:-us-west-2}
      # DynamoDB table name
      - DYNAMODB_TABLE=${DYNAMODB_TABLE:-uw-waste-management-prod}
    networks:
      - app-network
    restart: unless-stopped
    # For production, consider adding healthcheck
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  # NGINX for serving static files and reverse proxy
  nginx:
    image: nginx:alpine
    container_name: uw-waste-management-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../build:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge