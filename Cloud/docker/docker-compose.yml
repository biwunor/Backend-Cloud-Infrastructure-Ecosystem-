version: '3.8'

services:
  # Frontend and API service
  app:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile
      target: development
    container_name: uw-waste-management-app
    ports:
      - "3000:3000"  # Frontend
      - "3001:3001"  # API
    volumes:
      - ../../:/app
      - node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - REACT_APP_API_URL=http://localhost:3001/api
      - DYNAMODB_LOCAL_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
    networks:
      - app-network
    restart: unless-stopped

  # DynamoDB Local for development
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: uw-waste-management-dynamodb
    ports:
      - "8000:8000"
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data"
    volumes:
      - dynamodb-data:/home/dynamodblocal/data
    networks:
      - app-network
    restart: unless-stopped

  # DynamoDB Admin UI
  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: uw-waste-management-dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
    depends_on:
      - dynamodb-local
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  node_modules:
  dynamodb-data: